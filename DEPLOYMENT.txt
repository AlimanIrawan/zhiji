====================================
      脂记 - 详细部署指南
====================================

本文档提供完整的部署流程，包括截图说明和常见问题解决。

------------------------------------
【部署前准备】
------------------------------------

需要准备的账号和信息:

1. ✅ GitHub账号
   - 用于托管代码
   - 免费注册: https://github.com

2. ✅ Vercel账号
   - 用于部署前端
   - 使用GitHub登录: https://vercel.com

3. ✅ Render账号
   - 用于部署后端
   - 使用GitHub登录: https://render.com

4. ✅ OpenAI API密钥 (必填)
   - 用于食物识别和营养分析
   - 需要有GPT-4o模型访问权限
   - 需要有余额
   - 申请地址: https://platform.openai.com/api-keys
   - ⚠️ 这是必填项,不提供降级方案

5. ✅ Garmin Connect账号
   - 用于同步运动数据
   - 使用现有账号即可

------------------------------------
【Step 1: 推送代码到GitHub】
------------------------------------

1. 打开项目文件夹

2. 双击运行 git_push.sh
   
   或在终端执行:
   cd "/Users/LW/Documents/AIPLUS/2510 脂记"
   ./git_push.sh

3. 按照提示操作:
   
   a. 如果是首次使用,需要创建GitHub仓库:
      - 访问 https://github.com/new
      - Repository name: zhiji (或其他名称)
      - 设置为 Private (私有)
      - 点击 "Create repository"
      - 复制仓库地址,例如:
        https://github.com/你的用户名/zhiji.git
   
   b. 脚本会询问仓库地址,粘贴上面复制的地址
   
   c. 输入提交信息,例如: "初始版本"
   
   d. 脚本会自动推送代码

4. 验证推送成功:
   - 在浏览器打开你的GitHub仓库
   - 应该能看到所有文件

------------------------------------
【Step 2: 部署前端到Vercel】
------------------------------------

1. 访问 Vercel
   
   https://vercel.com
   使用GitHub账号登录

2. 导入项目
   
   a. 点击 "Add New..." -> "Project"
   
   b. 找到你的 zhiji 仓库,点击 "Import"
   
   c. 配置项目:
      - Framework Preset: Other
      - Root Directory: 点击 "Edit",选择 "frontend"
      - Build Command: 留空
      - Output Directory: . (点号)
      - Install Command: 留空
   
   d. 暂时不要点击 Deploy,先配置环境变量

3. 添加Upstash Redis
   
   a. 点击 "Storage" 标签页
   
   b. 点击 "Create Database"
   
   c. 选择 "KV Database" -> "Continue"
   
   d. 选择 "Upstash" -> "Continue"
   
   e. Database Name: zhiji-redis
   
   f. Region: 选择离你最近的(例如: US West)
   
   g. 点击 "Create"
   
   h. 系统会自动添加环境变量 KV_URL 和 KV_REST_API_*
   
   ⚠️ 重要: 需要添加一个额外的环境变量
   
   - 进入 Settings -> Environment Variables
   - 添加新变量:
     Name: REDIS_URL
     Value: 复制 KV_URL 的值
   - 适用于: Production, Preview, Development

4. 部署
   
   a. 点击 "Deploy"
   
   b. 等待部署完成(约1-2分钟)
   
   c. 部署成功后,会显示你的网站地址,例如:
      https://zhiji-xxxx.vercel.app
   
   d. 复制这个地址,后面需要用到

5. 测试前端
   
   访问你的Vercel地址,应该能看到应用界面
   (此时后端还未部署,部分功能无法使用)

------------------------------------
【Step 3: 部署后端到Render】
------------------------------------

1. 访问 Render
   
   https://render.com
   使用GitHub账号登录

2. 创建Web Service
   
   a. 点击 "New +" -> "Web Service"
   
   b. 点击 "Connect a repository"
   
   c. 找到你的 zhiji 仓库,点击 "Connect"

3. 配置项目
   
   a. 基本信息:
      - Name: zhiji-backend
      - Region: Oregon (免费)
      - Branch: main
      - Root Directory: backend
   
   b. 构建设置:
      - Runtime: Python 3
      - Build Command: pip install -r requirements.txt
      - Start Command: gunicorn app:app
   
   c. 实例类型:
      - Instance Type: Free
      
   d. 暂时不要点击 Create,先配置环境变量

4. 配置环境变量
   
   在 "Environment Variables" 部分,添加以下变量:
   
   a. OPENAI_API_KEY
      - 你的OpenAI API密钥
      - 例如: sk-xxxxxxxxxxxxx
   
   b. GARMIN_EMAIL
      - 你的Garmin账号邮箱
   
   c. GARMIN_PASSWORD
      - 你的Garmin账号密码
   
   d. REDIS_URL
      - 从Vercel复制
      - 进入Vercel项目 -> Settings -> Environment Variables
      - 找到 KV_URL,复制它的值
      - 例如: redis://default:xxxxx@xxxxx.upstash.io:6379
   
   e. SECRET_KEY
      - 生成随机字符串
      - 在macOS终端执行: openssl rand -hex 32
      - 复制输出的字符串
   
   f. FRONTEND_URL
      - 你的Vercel前端地址
      - 例如: https://zhiji-xxxx.vercel.app
   
   g. PYTHON_VERSION
      - 值: 3.11.0

5. 创建服务
   
   a. 点击 "Create Web Service"
   
   b. 等待部署完成(首次部署约5-10分钟)
   
   c. 部署成功后,会显示你的后端地址,例如:
      https://zhiji-backend.onrender.com
   
   d. 复制这个地址

6. 测试后端
   
   访问: https://zhiji-backend.onrender.com/health
   
   应该看到类似这样的JSON响应:
   {
     "status": "healthy",
     "timestamp": "2025-01-01T12:00:00",
     "services": {
       "redis": true,
       "openai": true,
       "garmin": true
     }
   }

------------------------------------
【Step 4: 连接前后端】
------------------------------------

1. 更新前端配置
   
   a. 编辑 frontend/config.js 文件:
   
   找到这一行:
   baseURL: isLocalhost 
     ? 'http://localhost:5000'
     : 'https://your-backend.onrender.com',
   
   改为:
   baseURL: isLocalhost 
     ? 'http://localhost:5000'
     : 'https://zhiji-backend.onrender.com',  // 替换为你的Render地址

2. 重新推送代码
   
   ./git_push.sh
   输入提交信息: "更新后端地址"

3. Vercel自动重新部署
   
   - Vercel会自动检测到代码更新
   - 自动重新部署
   - 等待约1分钟

4. 测试完整功能
   
   访问你的Vercel地址:
   https://zhiji-xxxx.vercel.app
   
   测试功能:
   ✅ 添加饮食记录
   ✅ 查看历史记录
   ✅ 同步Garmin数据
   ✅ 设置目标
   ✅ 查看日历

------------------------------------
【Step 5: 优化配置(可选)】
------------------------------------

1. 自定义域名
   
   a. 在Vercel项目中:
      - Settings -> Domains
      - 添加你的域名
      - 按照提示配置DNS
   
   b. 更新Render的FRONTEND_URL环境变量

2. 设置定时任务唤醒Render
   
   Render免费版会休眠,可以使用cron-job.org:
   
   a. 访问 https://cron-job.org
   b. 创建免费账号
   c. 创建新任务:
      - URL: https://zhiji-backend.onrender.com/health
      - 执行频率: 每14分钟
      - 这样可以保持服务不休眠

3. 监控服务状态
   
   - Vercel: 自动监控,稳定性高
   - Render: Dashboard可以看到服务状态
   - Upstash: Console可以看到Redis使用情况

------------------------------------
【常见部署问题】
------------------------------------

问题1: Vercel部署失败
解决:
  - 检查 Root Directory 是否设置为 "frontend"
  - 检查 vercel.json 文件是否存在
  - 查看构建日志找出具体错误

问题2: Render部署失败
解决:
  - 检查 Root Directory 是否设置为 "backend"
  - 检查 requirements.txt 是否存在
  - 查看构建日志,可能是某个包安装失败
  - Python版本需要 3.11.0

问题3: 前端无法连接后端
解决:
  - 检查 frontend/config.js 中的后端地址是否正确
  - 检查 Render 的 FRONTEND_URL 环境变量
  - 确保后端服务正在运行(访问/health端点测试)
  - 检查浏览器控制台是否有CORS错误

问题4: OpenAI API调用失败
解决:
  - 检查API密钥是否正确
  - 检查账户是否有余额
  - 检查是否有GPT-4o模型访问权限
  - 检查网络连接是否正常
  - ⚠️ 注意:本应用只使用真实AI分析,不提供降级方案
  - 如果无法使用OpenAI,建议先在本地测试确认配置正确后再部署

问题5: Garmin同步失败
解决:
  - 检查账号密码是否正确
  - 确认没有开启两步验证
  - Garmin可能限流,稍后再试
  - 如果无法解决,系统会使用模拟数据

问题6: Redis连接失败
解决:
  - 检查 REDIS_URL 环境变量是否正确
  - 确保Vercel和Render都配置了相同的REDIS_URL
  - 检查Upstash Redis是否正常运行
  - 如果无法解决,系统会使用内存模式(重启后数据丢失)

问题7: Render服务响应慢
原因:
  - 免费版会在15分钟无请求后休眠
  - 首次访问需要约30秒启动
解决:
  - 使用定时任务保持唤醒(见上面优化配置)
  - 或升级到付费版($7/月)

------------------------------------
【成本估算】
------------------------------------

免费方案(推荐入门):
  - Vercel: 免费
  - Render: 免费(有休眠限制)
  - Upstash Redis: 免费(10,000命令/天)
  - OpenAI API: 按使用付费(约$0.01-0.03/次分析)
  
  月成本估算: $5-15 (主要是OpenAI API使用费)

付费方案(推荐生产):
  - Vercel: $20/月 (Pro计划)
  - Render: $7/月 (Starter计划,无休眠)
  - Upstash Redis: 免费版足够
  - OpenAI API: 按使用付费
  
  月成本估算: $30-50

------------------------------------
【下一步】
------------------------------------

部署完成后,建议:

1. ✅ 测试所有功能
2. ✅ 添加第一条饮食记录
3. ✅ 同步Garmin数据
4. ✅ 设置减脂目标
5. ✅ 每天记录饮食
6. ✅ 查看进度报表

------------------------------------
【获取帮助】
------------------------------------

如遇到问题:
1. 查看 README.txt 的常见问题部分
2. 检查浏览器控制台的错误信息
3. 查看Render和Vercel的部署日志
4. 通过GitHub Issues反馈

祝您部署顺利！🚀

